/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  TokenSupplySystem,
  TokenSupplySystemInterface,
} from "../TokenSupplySystem";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_to",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amount",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_fee",
        type: "uint256[]",
      },
    ],
    name: "batchPay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "daoTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "daoTreasuryAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "pay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountNative",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "payAndPayWithNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "payWithNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setDAOTokenAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setDAOTreasuryAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unclaimedBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261005360201b60201c565b61005b60201b60201c565b60008060146101000a81548160ff0219169083151502179055506001808190555061011f565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6118988061012e6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80635f06534611610097578063a0712d6811610066578063a0712d6814610224578063a2fa6fc514610240578063e3aab35f1461025c578063f2fde38b1461027a576100f5565b80635f065346146101c4578063715018a6146101e05780638da5cb5b146101ea5780639b978e8b14610208576100f5565b80633af07ca6116100d35780633af07ca6146101505780633af704bd1461016e57806342966c681461018a5780635c975abb146101a6576100f5565b8063087b9b19146100fa5780631c004729146101165780631f67c8ea14610134575b600080fd5b610114600480360381019061010f9190610f08565b610296565b005b61011e610378565b60405161012b9190610f7e565b60405180910390f35b61014e60048036038101906101499190610f99565b61039e565b005b610158610413565b6040516101659190610ffb565b60405180910390f35b61018860048036038101906101839190611016565b6104c5565b005b6101a4600480360381019061019f9190611043565b610511565b005b6101ae6105ab565b6040516101bb919061108b565b60405180910390f35b6101de60048036038101906101d99190610f99565b6105c1565b005b6101e86105d9565b005b6101f26105ed565b6040516101ff9190610f7e565b60405180910390f35b610222600480360381019061021d91906112c2565b610616565b005b61023e60048036038101906102399190611043565b610724565b005b61025a60048036038101906102559190611016565b6107be565b005b61026461080a565b6040516102719190610f7e565b60405180910390f35b610294600480360381019061028f9190611016565b610830565b005b61029e6108b4565b600260015414156102e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102db906113c6565b60405180910390fd5b60026001819055506102f4610932565b8082846103019190611415565b61030b9190611415565b610313610413565b1015610354576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034b906114b7565b60405180910390fd5b6103608484600061097c565b61036b848383610b47565b6001808190555050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6103a66108b4565b600260015414156103ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e3906113c6565b60405180910390fd5b60026001819055506103fc610932565b610407838383610b47565b60018081905550505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104709190610f7e565b60206040518083038186803b15801561048857600080fd5b505afa15801561049c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c091906114ec565b905090565b6104cd6108b4565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6105196108b4565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639dc29fac30836040518363ffffffff1660e01b8152600401610576929190611519565b600060405180830381600087803b15801561059057600080fd5b505af11580156105a4573d6000803e3d6000fd5b5050505050565b60008060149054906101000a900460ff16905090565b6105c96108b4565b6105d483838361097c565b505050565b6105e16108b4565b6105eb6000610d94565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61061e6108b4565b8151835114610662576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106599061158e565b60405180910390fd5b80518351146106a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069d9061158e565b60405180910390fd5b60005b835181101561071e5761070b8482815181106106c8576106c76115ae565b5b60200260200101518483815181106106e3576106e26115ae565b5b60200260200101518484815181106106fe576106fd6115ae565b5b602002602001015161097c565b8080610716906115dd565b9150506106a9565b50505050565b61072c6108b4565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1930836040518363ffffffff1660e01b8152600401610789929190611519565b600060405180830381600087803b1580156107a357600080fd5b505af11580156107b7573d6000803e3d6000fd5b5050505050565b6107c66108b4565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6108386108b4565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156108a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089f90611698565b60405180910390fd5b6108b181610d94565b50565b6108bc610e58565b73ffffffffffffffffffffffffffffffffffffffff166108da6105ed565b73ffffffffffffffffffffffffffffffffffffffff1614610930576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092790611704565b60405180910390fd5b565b61093a6105ab565b1561097a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097190611770565b60405180910390fd5b565b80826109889190611415565b610990610413565b10156109d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c8906114b7565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401610a2e929190611519565b602060405180830381600087803b158015610a4857600080fd5b505af1158015610a5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8091906117bc565b506000811115610b4257600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb610ad06105ed565b836040518363ffffffff1660e01b8152600401610aee929190611519565b602060405180830381600087803b158015610b0857600080fd5b505af1158015610b1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4091906117bc565b505b505050565b8082610b539190611415565b610b5b610413565b1015610b9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b93906114b7565b60405180910390fd5b6000821115610c5857600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166387c9a33f8430856040518463ffffffff1660e01b8152600401610c04939291906117e9565b602060405180830381600087803b158015610c1e57600080fd5b505af1158015610c32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5691906114ec565b505b6000811115610d8f57600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ce557600080fd5b505afa158015610cf9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1d9190611835565b836040518363ffffffff1660e01b8152600401610d3b929190611519565b602060405180830381600087803b158015610d5557600080fd5b505af1158015610d69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8d91906117bc565b505b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e9f82610e74565b9050919050565b610eaf81610e94565b8114610eba57600080fd5b50565b600081359050610ecc81610ea6565b92915050565b6000819050919050565b610ee581610ed2565b8114610ef057600080fd5b50565b600081359050610f0281610edc565b92915050565b60008060008060808587031215610f2257610f21610e6a565b5b6000610f3087828801610ebd565b9450506020610f4187828801610ef3565b9350506040610f5287828801610ef3565b9250506060610f6387828801610ef3565b91505092959194509250565b610f7881610e94565b82525050565b6000602082019050610f936000830184610f6f565b92915050565b600080600060608486031215610fb257610fb1610e6a565b5b6000610fc086828701610ebd565b9350506020610fd186828701610ef3565b9250506040610fe286828701610ef3565b9150509250925092565b610ff581610ed2565b82525050565b60006020820190506110106000830184610fec565b92915050565b60006020828403121561102c5761102b610e6a565b5b600061103a84828501610ebd565b91505092915050565b60006020828403121561105957611058610e6a565b5b600061106784828501610ef3565b91505092915050565b60008115159050919050565b61108581611070565b82525050565b60006020820190506110a0600083018461107c565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6110f4826110ab565b810181811067ffffffffffffffff82111715611113576111126110bc565b5b80604052505050565b6000611126610e60565b905061113282826110eb565b919050565b600067ffffffffffffffff821115611152576111516110bc565b5b602082029050602081019050919050565b600080fd5b600061117b61117684611137565b61111c565b9050808382526020820190506020840283018581111561119e5761119d611163565b5b835b818110156111c757806111b38882610ebd565b8452602084019350506020810190506111a0565b5050509392505050565b600082601f8301126111e6576111e56110a6565b5b81356111f6848260208601611168565b91505092915050565b600067ffffffffffffffff82111561121a576112196110bc565b5b602082029050602081019050919050565b600061123e611239846111ff565b61111c565b9050808382526020820190506020840283018581111561126157611260611163565b5b835b8181101561128a57806112768882610ef3565b845260208401935050602081019050611263565b5050509392505050565b600082601f8301126112a9576112a86110a6565b5b81356112b984826020860161122b565b91505092915050565b6000806000606084860312156112db576112da610e6a565b5b600084013567ffffffffffffffff8111156112f9576112f8610e6f565b5b611305868287016111d1565b935050602084013567ffffffffffffffff81111561132657611325610e6f565b5b61133286828701611294565b925050604084013567ffffffffffffffff81111561135357611352610e6f565b5b61135f86828701611294565b9150509250925092565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006113b0601f83611369565b91506113bb8261137a565b602082019050919050565b600060208201905081810360008301526113df816113a3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061142082610ed2565b915061142b83610ed2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156114605761145f6113e6565b5b828201905092915050565b7f696e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b60006114a1601483611369565b91506114ac8261146b565b602082019050919050565b600060208201905081810360008301526114d081611494565b9050919050565b6000815190506114e681610edc565b92915050565b60006020828403121561150257611501610e6a565b5b6000611510848285016114d7565b91505092915050565b600060408201905061152e6000830185610f6f565b61153b6020830184610fec565b9392505050565b7f6c656e677468206d69736d617463680000000000000000000000000000000000600082015250565b6000611578600f83611369565b915061158382611542565b602082019050919050565b600060208201905081810360008301526115a78161156b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006115e882610ed2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561161b5761161a6113e6565b5b600182019050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611682602683611369565b915061168d82611626565b604082019050919050565b600060208201905081810360008301526116b181611675565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006116ee602083611369565b91506116f9826116b8565b602082019050919050565b6000602082019050818103600083015261171d816116e1565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b600061175a601083611369565b915061176582611724565b602082019050919050565b600060208201905081810360008301526117898161174d565b9050919050565b61179981611070565b81146117a457600080fd5b50565b6000815190506117b681611790565b92915050565b6000602082840312156117d2576117d1610e6a565b5b60006117e0848285016117a7565b91505092915050565b60006060820190506117fe6000830186610f6f565b61180b6020830185610f6f565b6118186040830184610fec565b949350505050565b60008151905061182f81610ea6565b92915050565b60006020828403121561184b5761184a610e6a565b5b600061185984828501611820565b9150509291505056fea2646970667358221220733b928379fcb20e1b38ebe9bce51582062534542303bae52dae4d4c274cf6fb64736f6c63430008090033";

type TokenSupplySystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenSupplySystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenSupplySystem__factory extends ContractFactory {
  constructor(...args: TokenSupplySystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TokenSupplySystem> {
    return super.deploy(overrides || {}) as Promise<TokenSupplySystem>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TokenSupplySystem {
    return super.attach(address) as TokenSupplySystem;
  }
  override connect(signer: Signer): TokenSupplySystem__factory {
    return super.connect(signer) as TokenSupplySystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenSupplySystemInterface {
    return new utils.Interface(_abi) as TokenSupplySystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenSupplySystem {
    return new Contract(address, _abi, signerOrProvider) as TokenSupplySystem;
  }
}
