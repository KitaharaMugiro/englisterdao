/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  TokenSupplySystem,
  TokenSupplySystemInterface,
} from "../TokenSupplySystem";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_to",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amount",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_fee",
        type: "uint256[]",
      },
    ],
    name: "batchPay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "daoTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "daoTreasuryAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "pay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountNative",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "payAndPayWithNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "payWithNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setDAOTokenAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setDAOTreasuryAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unclaimedBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261005360201b60201c565b61005b60201b60201c565b60008060146101000a81548160ff0219169083151502179055506001808190555061011f565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6117cd8061012e6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c578063a0712d6811610066578063a0712d68146101fd578063a2fa6fc514610219578063e3aab35f14610235578063f2fde38b14610253576100ea565b8063715018a6146101b95780638da5cb5b146101c35780639b978e8b146101e1576100ea565b80633af07ca6116100c85780633af07ca6146101455780633af704bd146101635780635c975abb1461017f5780635f0653461461019d576100ea565b8063087b9b19146100ef5780631c0047291461010b5780631f67c8ea14610129575b600080fd5b61010960048036038101906101049190610e3d565b61026f565b005b610113610351565b6040516101209190610eb3565b60405180910390f35b610143600480360381019061013e9190610ece565b610377565b005b61014d6103ec565b60405161015a9190610f30565b60405180910390f35b61017d60048036038101906101789190610f4b565b61049e565b005b6101876104ea565b6040516101949190610f93565b60405180910390f35b6101b760048036038101906101b29190610ece565b610500565b005b6101c1610518565b005b6101cb61052c565b6040516101d89190610eb3565b60405180910390f35b6101fb60048036038101906101f691906111ca565b610555565b005b61021760048036038101906102129190611271565b610663565b005b610233600480360381019061022e9190610f4b565b6106fd565b005b61023d610749565b60405161024a9190610eb3565b60405180910390f35b61026d60048036038101906102689190610f4b565b61076f565b005b6102776107f3565b600260015414156102bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b4906112fb565b60405180910390fd5b60026001819055506102cd610871565b8082846102da919061134a565b6102e4919061134a565b6102ec6103ec565b101561032d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610324906113ec565b60405180910390fd5b610339848460006108bb565b610344848383610a86565b6001808190555050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61037f6107f3565b600260015414156103c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bc906112fb565b60405180910390fd5b60026001819055506103d5610871565b6103e0838383610a86565b60018081905550505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104499190610eb3565b60206040518083038186803b15801561046157600080fd5b505afa158015610475573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104999190611421565b905090565b6104a66107f3565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060149054906101000a900460ff16905090565b6105086107f3565b6105138383836108bb565b505050565b6105206107f3565b61052a6000610cc9565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61055d6107f3565b81518351146105a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105989061149a565b60405180910390fd5b80518351146105e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105dc9061149a565b60405180910390fd5b60005b835181101561065d5761064a848281518110610607576106066114ba565b5b6020026020010151848381518110610622576106216114ba565b5b602002602001015184848151811061063d5761063c6114ba565b5b60200260200101516108bb565b8080610655906114e9565b9150506105e8565b50505050565b61066b6107f3565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1930836040518363ffffffff1660e01b81526004016106c8929190611532565b600060405180830381600087803b1580156106e257600080fd5b505af11580156106f6573d6000803e3d6000fd5b5050505050565b6107056107f3565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6107776107f3565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107de906115cd565b60405180910390fd5b6107f081610cc9565b50565b6107fb610d8d565b73ffffffffffffffffffffffffffffffffffffffff1661081961052c565b73ffffffffffffffffffffffffffffffffffffffff161461086f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086690611639565b60405180910390fd5b565b6108796104ea565b156108b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b0906116a5565b60405180910390fd5b565b80826108c7919061134a565b6108cf6103ec565b1015610910576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610907906113ec565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b815260040161096d929190611532565b602060405180830381600087803b15801561098757600080fd5b505af115801561099b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bf91906116f1565b506000811115610a8157600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb610a0f61052c565b836040518363ffffffff1660e01b8152600401610a2d929190611532565b602060405180830381600087803b158015610a4757600080fd5b505af1158015610a5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7f91906116f1565b505b505050565b8082610a92919061134a565b610a9a6103ec565b1015610adb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad2906113ec565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166387c9a33f8430856040518463ffffffff1660e01b8152600401610b3a9392919061171e565b602060405180830381600087803b158015610b5457600080fd5b505af1158015610b68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8c9190611421565b506000811115610cc457600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610c1a57600080fd5b505afa158015610c2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c52919061176a565b836040518363ffffffff1660e01b8152600401610c70929190611532565b602060405180830381600087803b158015610c8a57600080fd5b505af1158015610c9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc291906116f1565b505b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610dd482610da9565b9050919050565b610de481610dc9565b8114610def57600080fd5b50565b600081359050610e0181610ddb565b92915050565b6000819050919050565b610e1a81610e07565b8114610e2557600080fd5b50565b600081359050610e3781610e11565b92915050565b60008060008060808587031215610e5757610e56610d9f565b5b6000610e6587828801610df2565b9450506020610e7687828801610e28565b9350506040610e8787828801610e28565b9250506060610e9887828801610e28565b91505092959194509250565b610ead81610dc9565b82525050565b6000602082019050610ec86000830184610ea4565b92915050565b600080600060608486031215610ee757610ee6610d9f565b5b6000610ef586828701610df2565b9350506020610f0686828701610e28565b9250506040610f1786828701610e28565b9150509250925092565b610f2a81610e07565b82525050565b6000602082019050610f456000830184610f21565b92915050565b600060208284031215610f6157610f60610d9f565b5b6000610f6f84828501610df2565b91505092915050565b60008115159050919050565b610f8d81610f78565b82525050565b6000602082019050610fa86000830184610f84565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610ffc82610fb3565b810181811067ffffffffffffffff8211171561101b5761101a610fc4565b5b80604052505050565b600061102e610d95565b905061103a8282610ff3565b919050565b600067ffffffffffffffff82111561105a57611059610fc4565b5b602082029050602081019050919050565b600080fd5b600061108361107e8461103f565b611024565b905080838252602082019050602084028301858111156110a6576110a561106b565b5b835b818110156110cf57806110bb8882610df2565b8452602084019350506020810190506110a8565b5050509392505050565b600082601f8301126110ee576110ed610fae565b5b81356110fe848260208601611070565b91505092915050565b600067ffffffffffffffff82111561112257611121610fc4565b5b602082029050602081019050919050565b600061114661114184611107565b611024565b905080838252602082019050602084028301858111156111695761116861106b565b5b835b81811015611192578061117e8882610e28565b84526020840193505060208101905061116b565b5050509392505050565b600082601f8301126111b1576111b0610fae565b5b81356111c1848260208601611133565b91505092915050565b6000806000606084860312156111e3576111e2610d9f565b5b600084013567ffffffffffffffff81111561120157611200610da4565b5b61120d868287016110d9565b935050602084013567ffffffffffffffff81111561122e5761122d610da4565b5b61123a8682870161119c565b925050604084013567ffffffffffffffff81111561125b5761125a610da4565b5b6112678682870161119c565b9150509250925092565b60006020828403121561128757611286610d9f565b5b600061129584828501610e28565b91505092915050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006112e5601f8361129e565b91506112f0826112af565b602082019050919050565b60006020820190508181036000830152611314816112d8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061135582610e07565b915061136083610e07565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156113955761139461131b565b5b828201905092915050565b7f696e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b60006113d660148361129e565b91506113e1826113a0565b602082019050919050565b60006020820190508181036000830152611405816113c9565b9050919050565b60008151905061141b81610e11565b92915050565b60006020828403121561143757611436610d9f565b5b60006114458482850161140c565b91505092915050565b7f6c656e677468206d69736d617463680000000000000000000000000000000000600082015250565b6000611484600f8361129e565b915061148f8261144e565b602082019050919050565b600060208201905081810360008301526114b381611477565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006114f482610e07565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156115275761152661131b565b5b600182019050919050565b60006040820190506115476000830185610ea4565b6115546020830184610f21565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006115b760268361129e565b91506115c28261155b565b604082019050919050565b600060208201905081810360008301526115e6816115aa565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061162360208361129e565b915061162e826115ed565b602082019050919050565b6000602082019050818103600083015261165281611616565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b600061168f60108361129e565b915061169a82611659565b602082019050919050565b600060208201905081810360008301526116be81611682565b9050919050565b6116ce81610f78565b81146116d957600080fd5b50565b6000815190506116eb816116c5565b92915050565b60006020828403121561170757611706610d9f565b5b6000611715848285016116dc565b91505092915050565b60006060820190506117336000830186610ea4565b6117406020830185610ea4565b61174d6040830184610f21565b949350505050565b60008151905061176481610ddb565b92915050565b6000602082840312156117805761177f610d9f565b5b600061178e84828501611755565b9150509291505056fea2646970667358221220036c6772db80b4bb2a97bb57e8f5e13e912d7d6e92303d9cb01f232b2cd5d4c764736f6c63430008090033";

type TokenSupplySystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenSupplySystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenSupplySystem__factory extends ContractFactory {
  constructor(...args: TokenSupplySystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TokenSupplySystem> {
    return super.deploy(overrides || {}) as Promise<TokenSupplySystem>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TokenSupplySystem {
    return super.attach(address) as TokenSupplySystem;
  }
  override connect(signer: Signer): TokenSupplySystem__factory {
    return super.connect(signer) as TokenSupplySystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenSupplySystemInterface {
    return new utils.Interface(_abi) as TokenSupplySystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenSupplySystem {
    return new Contract(address, _abi, signerOrProvider) as TokenSupplySystem;
  }
}
