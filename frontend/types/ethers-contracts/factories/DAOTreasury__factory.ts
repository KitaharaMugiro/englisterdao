/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { DAOTreasury, DAOTreasuryInterface } from "../DAOTreasury";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256",
        name: "pollId",
        type: "int256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "candidate",
        type: "address",
      },
    ],
    name: "Candidated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256",
        name: "pollId",
        type: "int256",
      },
    ],
    name: "CreatePoll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256",
        name: "pollId",
        type: "int256",
      },
    ],
    name: "SettlePoll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256",
        name: "pollId",
        type: "int256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "Voted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256",
        name: "pollId",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "VotingEnabled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "payedAmount",
        type: "uint256",
      },
    ],
    name: "WithdrawEth",
    type: "event",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "destroy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentTokenRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setDAOTokenAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawProxy",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261005360201b60201c565b61005b60201b60201c565b60008060146101000a81548160ff0219169083151502179055506001808190555061011f565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6115c98061012e6000396000f3fe60806040526004361061009c5760003560e01c806383197ef01161006457806383197ef01461017657806387c9a33f1461018d5780638da5cb5b146101ca578063a2fa6fc5146101f5578063d0e30db01461021e578063f2fde38b1461023c5761009c565b806312065fe0146100a15780632e1a7d4d146100cc5780634e961921146101095780635c975abb14610134578063715018a61461015f575b600080fd5b3480156100ad57600080fd5b506100b6610265565b6040516100c39190610d69565b60405180910390f35b3480156100d857600080fd5b506100f360048036038101906100ee9190610db5565b61026d565b6040516101009190610d69565b60405180910390f35b34801561011557600080fd5b5061011e6102dd565b60405161012b9190610d69565b60405180910390f35b34801561014057600080fd5b506101496103c5565b6040516101569190610dfd565b60405180910390f35b34801561016b57600080fd5b506101746103db565b005b34801561018257600080fd5b5061018b6103ef565b005b34801561019957600080fd5b506101b460048036038101906101af9190610e76565b610419565b6040516101c19190610d69565b60405180910390f35b3480156101d657600080fd5b506101df61063f565b6040516101ec9190610ed8565b60405180910390f35b34801561020157600080fd5b5061021c60048036038101906102179190610ef3565b610668565b005b6102266106b4565b6040516102339190610dfd565b60405180910390f35b34801561024857600080fd5b50610263600480360381019061025e9190610ef3565b610713565b005b600047905090565b6000610277610797565b600260015414156102bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b490610f7d565b60405180910390fd5b60026001819055506102cf33836107e1565b905060018081905550919050565b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561034d57600080fd5b505afa158015610361573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103859190610fb2565b9050600081141561039b576000925050506103c2565b6103bd6103b76103a9610265565b670de0b6b3a76400006109b1565b826109ee565b925050505b90565b60008060149054906101000a900460ff16905090565b6103e3610aaf565b6103ed6000610b2d565b565b6103f7610aaf565b61040f61040261063f565b61040a610265565b610bf1565b610417610ce5565b565b6000610423610797565b60026001541415610469576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046090610f7d565b60405180910390fd5b6002600181905550600082116104b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ab9061102b565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561052357600080fd5b505afa158015610537573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055b9190610fb2565b9050600061057961057361056d610265565b876109b1565b836109ee565b90508273ffffffffffffffffffffffffffffffffffffffff16639dc29fac87876040518363ffffffff1660e01b81526004016105b692919061104b565b600060405180830381600087803b1580156105d057600080fd5b505af11580156105e4573d6000803e3d6000fd5b505050506105f28782610bf1565b7f50a28b6d20a1ca0875995486d292a7fc963130657ece1a197a839884f2efe4ea8582604051610623929190611074565b60405180910390a1809350505050600180819055509392505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610670610aaf565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006106be610797565b3373ffffffffffffffffffffffffffffffffffffffff167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4346040516107049190610d69565b60405180910390a26001905090565b61071b610aaf565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561078b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107829061110f565b60405180910390fd5b61079481610b2d565b50565b61079f6103c5565b156107df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d69061117b565b60405180910390fd5b565b60006107eb610797565b6000821161082e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108259061102b565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561089d57600080fd5b505afa1580156108b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d59190610fb2565b905060006108f36108ed6108e7610265565b876109b1565b836109ee565b90508273ffffffffffffffffffffffffffffffffffffffff16639dc29fac87876040518363ffffffff1660e01b815260040161093092919061104b565b600060405180830381600087803b15801561094a57600080fd5b505af115801561095e573d6000803e3d6000fd5b5050505061096c8682610bf1565b7f50a28b6d20a1ca0875995486d292a7fc963130657ece1a197a839884f2efe4ea858260405161099d929190611074565b60405180910390a180935050505092915050565b60008082846109c091906111ca565b905060008414806109db57508284826109d99190611253565b145b6109e457600080fd5b8091505092915050565b6000808211610a32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a29906112d0565b60405180910390fd5b60008284610a409190611253565b90508284610a4e91906112f0565b8184610a5a91906111ca565b610a649190611321565b8414610aa5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9c906113c3565b60405180910390fd5b8091505092915050565b610ab7610d48565b73ffffffffffffffffffffffffffffffffffffffff16610ad561063f565b73ffffffffffffffffffffffffffffffffffffffff1614610b2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b229061142f565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b80471015610c34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2b9061149b565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff1682604051610c5a906114ec565b60006040518083038185875af1925050503d8060008114610c97576040519150601f19603f3d011682016040523d82523d6000602084013e610c9c565b606091505b5050905080610ce0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd790611573565b60405180910390fd5b505050565b610ced610797565b6001600060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610d31610d48565b604051610d3e9190610ed8565b60405180910390a1565b600033905090565b6000819050919050565b610d6381610d50565b82525050565b6000602082019050610d7e6000830184610d5a565b92915050565b600080fd5b610d9281610d50565b8114610d9d57600080fd5b50565b600081359050610daf81610d89565b92915050565b600060208284031215610dcb57610dca610d84565b5b6000610dd984828501610da0565b91505092915050565b60008115159050919050565b610df781610de2565b82525050565b6000602082019050610e126000830184610dee565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e4382610e18565b9050919050565b610e5381610e38565b8114610e5e57600080fd5b50565b600081359050610e7081610e4a565b92915050565b600080600060608486031215610e8f57610e8e610d84565b5b6000610e9d86828701610e61565b9350506020610eae86828701610e61565b9250506040610ebf86828701610da0565b9150509250925092565b610ed281610e38565b82525050565b6000602082019050610eed6000830184610ec9565b92915050565b600060208284031215610f0957610f08610d84565b5b6000610f1784828501610e61565b91505092915050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000610f67601f83610f20565b9150610f7282610f31565b602082019050919050565b60006020820190508181036000830152610f9681610f5a565b9050919050565b600081519050610fac81610d89565b92915050565b600060208284031215610fc857610fc7610d84565b5b6000610fd684828501610f9d565b91505092915050565b7f616d6f756e74206d7573742062652067726561746572207468616e2030000000600082015250565b6000611015601d83610f20565b915061102082610fdf565b602082019050919050565b6000602082019050818103600083015261104481611008565b9050919050565b60006040820190506110606000830185610ec9565b61106d6020830184610d5a565b9392505050565b60006040820190506110896000830185610d5a565b6110966020830184610d5a565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006110f9602683610f20565b91506111048261109d565b604082019050919050565b60006020820190508181036000830152611128816110ec565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b6000611165601083610f20565b91506111708261112f565b602082019050919050565b6000602082019050818103600083015261119481611158565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006111d582610d50565b91506111e083610d50565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156112195761121861119b565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061125e82610d50565b915061126983610d50565b92508261127957611278611224565b5b828204905092915050565b7f646976696465206279207a65726f000000000000000000000000000000000000600082015250565b60006112ba600e83610f20565b91506112c582611284565b602082019050919050565b600060208201905081810360008301526112e9816112ad565b9050919050565b60006112fb82610d50565b915061130683610d50565b92508261131657611315611224565b5b828206905092915050565b600061132c82610d50565b915061133783610d50565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561136c5761136b61119b565b5b828201905092915050565b7f6f766572666c6f77000000000000000000000000000000000000000000000000600082015250565b60006113ad600883610f20565b91506113b882611377565b602082019050919050565b600060208201905081810360008301526113dc816113a0565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611419602083610f20565b9150611424826113e3565b602082019050919050565b600060208201905081810360008301526114488161140c565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e6365000000600082015250565b6000611485601d83610f20565b91506114908261144f565b602082019050919050565b600060208201905081810360008301526114b481611478565b9050919050565b600081905092915050565b50565b60006114d66000836114bb565b91506114e1826114c6565b600082019050919050565b60006114f7826114c9565b9150819050919050565b7f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260008201527f6563697069656e74206d61792068617665207265766572746564000000000000602082015250565b600061155d603a83610f20565b915061156882611501565b604082019050919050565b6000602082019050818103600083015261158c81611550565b905091905056fea2646970667358221220bc66f48d6fa824cab8ee52711186f066d3bd0c1221765ca31b7e3724ba11006064736f6c63430008090033";

type DAOTreasuryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DAOTreasuryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DAOTreasury__factory extends ContractFactory {
  constructor(...args: DAOTreasuryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DAOTreasury> {
    return super.deploy(overrides || {}) as Promise<DAOTreasury>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DAOTreasury {
    return super.attach(address) as DAOTreasury;
  }
  override connect(signer: Signer): DAOTreasury__factory {
    return super.connect(signer) as DAOTreasury__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DAOTreasuryInterface {
    return new utils.Interface(_abi) as DAOTreasuryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DAOTreasury {
    return new Contract(address, _abi, signerOrProvider) as DAOTreasury;
  }
}
